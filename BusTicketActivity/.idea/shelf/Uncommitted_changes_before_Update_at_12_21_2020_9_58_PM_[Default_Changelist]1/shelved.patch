Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\nandroid {\r\n\r\n    compileSdkVersion 29\r\n    flavorDimensions \"mode\"\r\n    defaultConfig {\r\n        applicationId \"com.example.busticketactivity\"\r\n        minSdkVersion 22\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    productFlavors {\r\n        sandbox {\r\n            applicationId = \"com.example.busticketactivity\"\r\n\r\n            buildConfigField \"String\", \"BASE_URL\", \"\\\"https://pythonmidtrans.herokuapp.com/\\\"\"\r\n            buildConfigField \"String\", \"CLIENT_KEY\", \"\\\"SB-Mid-client-xc9c1l3oJpz9qaOZ\\\"\"\r\n        }\r\n\r\n//        production {\r\n////            applicationId = \"com.example.busticketactivity\"\r\n////            resValue \"String\",\"app_name\",\"busticketactivity sandbox\"\r\n////            buildConfigField \"String\", \"BASE_URL\", \"\\\"https://midtransphp.herokuapp.com/index.php\\\"\"\r\n////            buildConfigField \"String\", \"CLIENT_KEY\", \"\\\"SB-Mid-client-xc9c1l3oJpz9qaOZ\\\"\"\r\n////\r\n//        }\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\r\n    implementation 'androidx.core:core-ktx:1.3.2'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'com.google.firebase:firebase-auth-ktx:19.4.0'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-functions:19.1.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    implementation 'com.google.firebase:firebase-firestore:22.0.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation \"com.google.android.material:material:1.3.0-alpha04\"\r\n    implementation \"com.google.firebase:firebase-bom:25.12.0\"\r\n    implementation 'androidx.recyclerview:recyclerview:1.0.0'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    implementation 'de.hdodenhof:circleimageview:3.0.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.9.0'\r\n\r\n    // kotlinx-coroutines\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.2.1\"\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1\"\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1\"\r\n// retrofit2 & okhttp3\r\n    implementation \"com.squareup.retrofit2:retrofit:2.5.0\"\r\n    implementation \"com.squareup.okhttp3:okhttp:3.12.0\"\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'\r\n// converter-gson\r\n    implementation \"com.squareup.retrofit2:converter-gson:2.5.0\"\r\n    implementation \"com.google.code.gson:gson:2.8.5\"\r\n// retrofit2-kotlin-coroutines-adapter\r\n    implementation \"com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2\"\r\n // For using the Midtrans Sandbox\r\n    implementation 'com.midtrans:uikit:1.21.2-SANDBOX'\r\n    sandboxImplementation 'com.midtrans:uikit:1.21.2-SANDBOX'\r\n\r\n    implementation 'com.google.code.gson:gson:2.8.5'\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision a3820894313e0cefa217c2e51df53a39aa490c74)
+++ app/build.gradle	(date 1608194342917)
@@ -50,7 +50,14 @@
     implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
     implementation 'com.google.firebase:firebase-auth-ktx:19.4.0'
 
+    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
+    implementation "com.squareup.retrofit2:retrofit:2.3.0"
+    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
+    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
 
+    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
+    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
+    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
     implementation 'com.google.firebase:firebase-functions:19.1.0'
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
     implementation 'com.google.firebase:firebase-auth:20.0.1'
Index: app/src/main/java/com/example/busticketactivity/signin/UserObject.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.busticketactivity.signin\r\n\r\nimport android.os.Parcelable\r\nimport kotlinx.android.parcel.Parcelize\r\n\r\n@Parcelize\r\ndata class UserObject(\r\n    val email:String=\"\",\r\n    val lastname:String=\"\",\r\n    val nama:String=\"\",\r\n    val username:String=\"\"\r\n): Parcelable
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/busticketactivity/signin/UserObject.kt	(revision a3820894313e0cefa217c2e51df53a39aa490c74)
+++ app/src/main/java/com/example/busticketactivity/signin/UserObject.kt	(date 1608562610514)
@@ -1,12 +1,12 @@
 package com.example.busticketactivity.signin
 
 import android.os.Parcelable
-import kotlinx.android.parcel.Parcelize
+import java.io.Serializable
 
-@Parcelize
+
 data class UserObject(
     val email:String="",
     val lastname:String="",
     val nama:String="",
     val username:String=""
-): Parcelable
\ No newline at end of file
+): Serializable
\ No newline at end of file
Index: .idea/dictionaries/Reizha.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/Reizha.xml	(date 1608562040373)
+++ .idea/dictionaries/Reizha.xml	(date 1608562040373)
@@ -0,0 +1,3 @@
+<component name="ProjectDictionaryState">
+  <dictionary name="Reizha" />
+</component>
\ No newline at end of file
Index: app/src/main/res/layout/activity_tiket_activty.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".tiketmenu.TiketActivty\">\r\n    <com.google.android.material.textview.MaterialTextView\r\n        android:id=\"@+id/tv_new\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n       app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:textColor=\"@color/bluegdwhite\"\r\n        android:text=\"test\"\r\n        />\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:orientation=\"vertical\"\r\n        android:id=\"@+id/rv_tiket\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/tv_new\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        tools:listitem=\"@layout/item_ticket\"\r\n        />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_tiket_activty.xml	(revision a3820894313e0cefa217c2e51df53a39aa490c74)
+++ app/src/main/res/layout/activity_tiket_activty.xml	(date 1608562362257)
@@ -5,6 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     tools:context=".tiketmenu.TiketActivty">
+
     <com.google.android.material.textview.MaterialTextView
         android:id="@+id/tv_new"
         android:layout_width="wrap_content"
Index: app/src/main/java/com/example/busticketactivity/signin/SignInActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.busticketactivity.signin\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.EditText\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.busticketactivity.R\r\nimport com.example.busticketactivity.firebase.FireBaseRepo\r\nimport com.example.busticketactivity.home.HomeActivity\r\nimport com.example.busticketactivity.pickticket.PickTicketActivity\r\nimport com.example.busticketactivity.regist.RegisterActivity\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.auth.FirebaseUser\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.gson.Gson\r\nimport kotlinx.android.synthetic.main.activity_sign_in.*\r\n\r\n\r\nclass SignInActivity : AppCompatActivity(),View.OnClickListener {\r\n\r\n    private lateinit var auth: FirebaseAuth\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_sign_in)\r\n        btn_sign_in.setOnClickListener(this)\r\n        tv_register.setOnClickListener(this)\r\n    }\r\n\r\n    override fun onStart() {\r\n        val prefs=getSharedPreferences(\"login\",MODE_PRIVATE)\r\n        if (!prefs.getString(\"login\",\"\").isNullOrEmpty()){\r\n            Toast.makeText(this, \"${prefs.getString(\"login\",\"\")}\", Toast.LENGTH_SHORT).show()\r\n            val intent=Intent(this,HomeActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n        super.onStart()\r\n    }\r\n\r\n    private fun firebaseLogin() {\r\n        val prefs=getSharedPreferences(\"login\",MODE_PRIVATE)\r\n        val email = findViewById<EditText>(R.id.ed_username)\r\n        val password =  findViewById<EditText>(R.id.ed_password)\r\n        val usernameText=email.text.toString()\r\n        val passwordText=password.text.toString()\r\n        val emailPref=getSharedPreferences(\"email\",Context.MODE_PRIVATE).edit()\r\n        emailPref.putString(\"email\",usernameText).apply()\r\n        auth = Firebase.auth\r\n        auth.signInWithEmailAndPassword(usernameText, passwordText)\r\n            .addOnCompleteListener(this) { task ->\r\n                if (task.isSuccessful) {\r\n                    prefs.edit().putString(\"login\",\"${auth.currentUser}\").apply()\r\n                   val intent=Intent(this,HomeActivity::class.java)\r\n                    startActivity(intent)\r\n                } else {\r\n                    // If sign in fails, display a message to the user.\r\n                    Toast.makeText(this, \"login gagal\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n\r\n//\r\n    }\r\n\r\n    override fun onClick(v: View?) {\r\n        val intent= Intent(this,\r\n            RegisterActivity::class.java)\r\n        when(v?.id){\r\n            R.id.btn_sign_in ->{\r\n                firebaseLogin()\r\n            }\r\n            R.id.tv_register ->{\r\n                startActivity(intent)\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/busticketactivity/signin/SignInActivity.kt	(revision a3820894313e0cefa217c2e51df53a39aa490c74)
+++ app/src/main/java/com/example/busticketactivity/signin/SignInActivity.kt	(date 1608562362179)
@@ -8,15 +8,12 @@
 import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
 import com.example.busticketactivity.R
-import com.example.busticketactivity.firebase.FireBaseRepo
 import com.example.busticketactivity.home.HomeActivity
-import com.example.busticketactivity.pickticket.PickTicketActivity
 import com.example.busticketactivity.regist.RegisterActivity
 import com.google.firebase.auth.FirebaseAuth
-import com.google.firebase.auth.FirebaseUser
 import com.google.firebase.auth.ktx.auth
 import com.google.firebase.ktx.Firebase
-import com.google.gson.Gson
+
 import kotlinx.android.synthetic.main.activity_sign_in.*
 
 
@@ -41,17 +38,23 @@
     }
 
     private fun firebaseLogin() {
-        val prefs=getSharedPreferences("login",MODE_PRIVATE)
+
         val email = findViewById<EditText>(R.id.ed_username)
         val password =  findViewById<EditText>(R.id.ed_password)
         val usernameText=email.text.toString()
         val passwordText=password.text.toString()
+
+        //mendapatakan email dan menyimpannya
+        val prefs=getSharedPreferences("login",MODE_PRIVATE)
         val emailPref=getSharedPreferences("email",Context.MODE_PRIVATE).edit()
         emailPref.putString("email",usernameText).apply()
+
+
         auth = Firebase.auth
         auth.signInWithEmailAndPassword(usernameText, passwordText)
             .addOnCompleteListener(this) { task ->
                 if (task.isSuccessful) {
+                    //menset login ketika berhasil masuk
                     prefs.edit().putString("login","${auth.currentUser}").apply()
                    val intent=Intent(this,HomeActivity::class.java)
                     startActivity(intent)
Index: app/src/main/java/com/example/busticketactivity/signin/SignInAndRegistActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.busticketactivity.signin\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.example.busticketactivity.R\r\nimport com.example.busticketactivity.regist.RegisterActivity\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport kotlinx.android.synthetic.main.activity_sign_in_and_regist.*\r\n\r\nclass SignInAndRegistActivity : AppCompatActivity(),View.OnClickListener {\r\n    private lateinit var auth: FirebaseAuth\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_sign_in_and_regist)\r\n        btn_sign_in.setOnClickListener(this)\r\n        btn_register.setOnClickListener(this)\r\n        initateUi()\r\n\r\n    }\r\n    private fun initateUi(){\r\n        val prefs=getSharedPreferences(\"login\",MODE_PRIVATE)\r\n        if (!prefs.getString(\"login\",\"\").isNullOrEmpty()){\r\n            val intent= Intent(this,\r\n                SignInActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        finish()\r\n    }\r\n    override fun onClick(v: View?) {\r\n        when(v?.id){\r\n            R.id.btn_sign_in ->{\r\n                val intent= Intent(this,\r\n                    SignInActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n            R.id.btn_register ->{\r\n                val intent= Intent(this,\r\n                    RegisterActivity::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/busticketactivity/signin/SignInAndRegistActivity.kt	(revision a3820894313e0cefa217c2e51df53a39aa490c74)
+++ app/src/main/java/com/example/busticketactivity/signin/SignInAndRegistActivity.kt	(date 1608562362203)
@@ -4,14 +4,11 @@
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
 import android.view.View
-import android.widget.Toast
 import com.example.busticketactivity.R
 import com.example.busticketactivity.regist.RegisterActivity
-import com.google.firebase.auth.FirebaseAuth
 import kotlinx.android.synthetic.main.activity_sign_in_and_regist.*
 
 class SignInAndRegistActivity : AppCompatActivity(),View.OnClickListener {
-    private lateinit var auth: FirebaseAuth
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_sign_in_and_regist)
Index: app/src/main/java/com/example/busticketactivity/adapter/ItemMenuAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.busticketactivity.adapter\r\n\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.busticketactivity.R\r\nimport com.example.busticketactivity.item.ItemMenuClass\r\nimport com.example.busticketactivity.listener.MenuItemListener\r\nimport kotlinx.android.synthetic.main.item_menu.view.*\r\n\r\n\r\nclass ItemMenuAdapter(private val listItemData: MutableList<ItemMenuClass>,\r\n                      private val listener: MenuItemListener) :\r\n    RecyclerView.Adapter<ItemMenuAdapter.ListViewHolder>() {\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ListViewHolder {\r\n        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_menu, parent, false)\r\n        return ListViewHolder(view)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: ListViewHolder, position: Int) {\r\n       val item = listItemData[position]\r\n        holder.bind(item)\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n       return listItemData.size\r\n    }\r\n\r\n    inner class ListViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        fun bind(item:ItemMenuClass){\r\n            with(itemView){\r\n                btn_rv.background=ContextCompat.getDrawable(itemView.context,item.imageButton)\r\n                btn_rv.setOnClickListener { listener.onItemClick(item.nama) }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/busticketactivity/adapter/ItemMenuAdapter.kt	(revision a3820894313e0cefa217c2e51df53a39aa490c74)
+++ app/src/main/java/com/example/busticketactivity/adapter/ItemMenuAdapter.kt	(date 1608441127224)
@@ -33,7 +33,7 @@
         fun bind(item:ItemMenuClass){
             with(itemView){
                 btn_rv.background=ContextCompat.getDrawable(itemView.context,item.imageButton)
-                btn_rv.setOnClickListener { listener.onItemClick(item.nama) }
+                btn_rv
             }
         }
 
